@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

body {
  font-family: 'Inter', sans-serif;
}

.gradient-rosatom {
  background: linear-gradient(135deg, #003d82 0%, #4a90e2 100%);
}

.cyber-glow {
  box-shadow: 0 0 20px rgba(0, 61, 130, 0.3);
}

.floating-animation {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

.grid-pattern {
  background-image:
    linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

.hero-bg {
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
}


body {
  font-family: 'Inter', sans-serif;
}

.gradient-rosatom {
  background: linear-gradient(135deg, #003d82 0%, #4a90e2 100%);
}

.cyber-glow {
  box-shadow: 0 0 20px rgba(0, 61, 130, 0.3);
}

.grid-pattern {
  background-image:
    linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

.hero-bg {
  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
}

.service-card {
  background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
  border: 1px solid #e2e8f0;
}

.floating-animation {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  }

  /* Для сертификации линия */
  @keyframes scan {
  0% { transform: translateX(0); }
  50% { transform: translateX(316px); } /* 320px (ширина) - 4px (ширина луча) */
  100% { transform: translateX(0); }
}
.animate-scan {
  animation: scan 4s infinite;
}


  /* Для пентеста вариант 1 - делает красную линию */
@keyframes draw-path {
  to { stroke-dashoffset: 0; }
}
.group:hover .path-animation {
  animation: draw-path 1.5s ease-out forwards;
}

 /* Для пентеста вариант вариант с горизонтальной линией вниз */
@keyframes scanline {
  0% { transform: translateY(0); }
  100% { transform: translateY(320px); } /* 320px - высота блока */
}
.animate-scanline {
  animation: scanline 3s linear infinite;
}

/* Плавная бесконечная прокрутка двух одинаковых блоков кода */
@keyframes waterfall {
  from { transform: translateY(0); }
  to   { transform: translateY(-50%); } /* сдвиг на высоту первого блока */
}

/* Едва заметный двигающийся блик */
@keyframes scan {
  0% { transform: translateX(0); }
  50% { transform: translateX(316px); } /* ширина блока - ширина луча */
  100% { transform: translateX(0); }
}
.animate-scan {
  animation: scan 4s linear infinite;
}

.animate-waterfall {
  animation: waterfall var(--code-speed, 26s) linear infinite;
  will-change: transform;
}

/* Остановка анимации при ховере окна */
.group:hover .animate-waterfall,
.group:hover .animate-scan {
  animation-play-state: paused;
}

.animate-scan {
  animation: scan 8s linear infinite;
}

/* Подстраиваемся под prefers-reduced-motion */
@media (prefers-reduced-motion: reduce) {
  .animate-waterfall,
  .animate-scan {
    animation: none !important;
  }
}

/* Гарантируем, что код не ломается на строки */
.code-block {
  white-space: pre;
}

/* --- Стили для ПЕНТЕСТА анимации сканирования и кода --- */

@keyframes scanline {
  0% { transform: translateY(0); }
  100% { transform: translateY(320px); } /* 320px - это высота блока h-80 */
}
.animate-scanline {
  animation: scanline 4s linear infinite;
}

/* Стили для контейнера с кодом, чтобы он правильно переносился */
#code-container {
  word-break: break-all; /* Разрешаем перенос в любом месте */
  line-height: 1.5; /* Устанавливаем высоту строки для расчетов */
}

/* Стили для найденной "ошибки" */
.error-char {
  color: #ef4444; /* Красный цвет */
  animation: pulse 1.5s infinite; /* Анимация пульсации */
  text-shadow: 0 0 8px #ef4444; /* Эффект свечения */
}

/* --- СТИЛИ ДЛЯ СДЕРЖАННОГО ГЛИТЧ-ЭФФЕКТА + СВЕЧЕНИЕ ЧАСТИЦ --- */
/* --- СТИЛИ ДЛЯ ГЛИТЧ-ЭФФЕКТА И СВЕЧЕНИЯ --- */

.glitch-container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.glitch-layer-base, .glitch-layer {
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  pointer-events: none;
}
.glitch-layer {
  opacity: 0;
  transition: opacity 0.1s ease-in;
}
.group:hover .glitch-layer {
  opacity: 1;
}

@keyframes glitch-subtle-animation {
  0% { transform: translate(0); }
  25% { transform: translate(-2px, 2px); }
  50% { transform: translate(2px, -2px); }
  75% { transform: translate(-1px, 1px); }
  100% { transform: translate(0); }
}

@keyframes glitch-scanline {
    0% { clip-path: inset(0% 0 95% 0); }
    25% { clip-path: inset(20% 0 75% 0); }
    50% { clip-path: inset(50% 0 40% 0); }
    75% { clip-path: inset(80% 0 10% 0); }
    100% { clip-path: inset(95% 0 0% 0); }
}

.group:hover .glitch-layer:nth-child(2) {
  mix-blend-mode: multiply;
  filter: brightness(0.8) contrast(1.5);
  animation: glitch-subtle-animation 0.7s linear both infinite;
}

.group:hover .glitch-layer:nth-child(3) {
  mix-blend-mode: color-dodge;
  filter: brightness(5) grayscale(1) contrast(3) sepia(0.5);
  animation: glitch-scanline 1.2s linear both infinite;
}

.group:hover .glitch-layer-base {
    filter: brightness(0.95);
    transition: filter 0.2s ease-in-out;
}
.group .glitch-layer-base {
    transition: filter 0.3s ease-in-out;
}

/* === ИЗМЕНЕНИЯ ЗДЕСЬ === */

/* Свечение и эффекты для частиц */
.glitch-layer-base circle {
    /* Добавляем transition для плавного изменения filter и transform */
    transition: filter 0.3s ease-out, transform 0.3s ease-out;
    /* Устанавливаем transform-origin в центр, чтобы масштабирование было корректным */
    transform-origin: center center;
}

/* При наведении на группу... */
.group:hover .glitch-layer-base circle {
    /* ...немного увеличиваем частицы */
    transform: scale(1.2);
}

.group:hover .glitch-layer-base circle[fill="#10b981"] {
  /* Добавляем blur(1px) к существующему свечению */
  filter: drop-shadow(0 0 8px #10b981) blur(1px);
}
.group:hover .glitch-layer-base circle[fill="#4a90e2"] {
  /* Добавляем blur(1px) к существующему свечению */
  filter: drop-shadow(0 0 8px #4a90e2) blur(1px);
}
.group:hover .glitch-layer-base circle[fill="#15256d"] {
  /* Добавляем blur(0.5px) для самых маленьких частиц */
  filter: drop-shadow(0 0 6px #4a90e2) blur(0.5px);
}

/* Анимация для плавного появления cookie-баннера */
@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.animate-fade-in-up {
  animation: fadeInUp 0.5s ease-out forwards;
}


/* Мигающий курсор на конце напечатанного текста */
@keyframes caret-blink {
  0%, 49% { opacity: 1; }
  50%, 100% { opacity: 0; }
}
#typed::after {
  content: '';
  display: inline-block;
  width: 2px;
  height: 1em;
  margin-left: 2px;
  background: #2563eb; /* замените на ваш rosatom-blue, если нужен */
  vertical-align: -2px;
  animation: caret-blink 1s steps(1) infinite;
}
.ide.paused #typed::after { animation-play-state: paused; opacity: 1; }

/* Активная строка под курсором */
.ide .active-line {
  --lh: 1.5rem; /* leading-6 */
  position: absolute;
  transform: translateY(calc(var(--line-i, 0) * var(--lh)));
  transition: transform 120ms ease-out, opacity 200ms ease-out;
  opacity: 0.85;
}

/* Уважение prefers-reduced-motion */
@media (prefers-reduced-motion: reduce) {
  #typed::after { display: none; }
}