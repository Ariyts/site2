@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');

body {
  font-family: 'Inter', sans-serif;
}

.gradient-rosatom {
  background: linear-gradient(135deg, #003d82 0%, #4a90e2 100%);
}

.cyber-glow {
  box-shadow: 0 0 20px rgba(0, 61, 130, 0.3);
}

.floating-animation {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

.grid-pattern {
  background-image:
    linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

.hero-bg {
  background: linear-gradient(135deg, #f8fafc 0%, #e2e8f0 100%);
}


body {
  font-family: 'Inter', sans-serif;
}

.gradient-rosatom {
  background: linear-gradient(135deg, #003d82 0%, #4a90e2 100%);
}

.cyber-glow {
  box-shadow: 0 0 20px rgba(0, 61, 130, 0.3);
}

.grid-pattern {
  background-image:
    linear-gradient(rgba(255, 255, 255, 0.1) 1px, transparent 1px),
    linear-gradient(90deg, rgba(255, 255, 255, 0.1) 1px, transparent 1px);
  background-size: 20px 20px;
}

.hero-bg {
  background: linear-gradient(135deg, #f1f5f9 0%, #e2e8f0 100%);
}

.service-card {
  background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
  border: 1px solid #e2e8f0;
}

.floating-animation {
  animation: float 6s ease-in-out infinite;
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
  }

  /* Для сертификации линия */
  @keyframes scan {
  0% { transform: translateX(0); }
  50% { transform: translateX(316px); } /* 320px (ширина) - 4px (ширина луча) */
  100% { transform: translateX(0); }
}
.animate-scan {
  animation: scan 4s infinite;
}


  /* Для пентеста вариант 1 - делает красную линию */
@keyframes draw-path {
  to { stroke-dashoffset: 0; }
}
.group:hover .path-animation {
  animation: draw-path 1.5s ease-out forwards;
}

 /* Для пентеста вариант вариант с горизонтальной линией вниз */
@keyframes scanline {
  0% { transform: translateY(0); }
  100% { transform: translateY(320px); } /* 320px - высота блока */
}
.animate-scanline {
  animation: scanline 3s linear infinite;
}

/* Для разработки - падающий текст */
/* --- Стили для анимации водопада кода --- */

/* 1. Определяем анимацию, которая сдвигает блок вверх на его собственную высоту */
@keyframes waterfall {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-50%); /* Сдвигаем ровно на высоту одного блока кода */
  }
}

/* 2. Применяем анимацию к контейнеру с двумя блоками кода */
.animate-waterfall {
  /* Длительность анимации (30 секунд) можно настроить под себя */
  animation: waterfall 30s linear infinite;
}

/* 3. Гарантируем, что блоки кода не будут переноситься */
.code-block {
  white-space: pre;
}

/* --- Стили для ПЕНТЕСТА анимации сканирования и кода --- */

@keyframes scanline {
  0% { transform: translateY(0); }
  100% { transform: translateY(320px); } /* 320px - это высота блока h-80 */
}
.animate-scanline {
  animation: scanline 4s linear infinite;
}

/* Стили для контейнера с кодом, чтобы он правильно переносился */
#code-container {
  word-break: break-all; /* Разрешаем перенос в любом месте */
  line-height: 1.5; /* Устанавливаем высоту строки для расчетов */
}

/* Стили для найденной "ошибки" */
.error-char {
  color: #ef4444; /* Красный цвет */
  animation: pulse 1.5s infinite; /* Анимация пульсации */
  text-shadow: 0 0 8px #ef4444; /* Эффект свечения */
}

/* --- СТИЛИ ДЛЯ СДЕРЖАННОГО ГЛИТЧ-ЭФФЕКТА + СВЕЧЕНИЕ ЧАСТИЦ --- */
/* --- СТИЛИ ДЛЯ ГЛИТЧ-ЭФФЕКТА И СВЕЧЕНИЯ --- */

.glitch-container {
  position: relative;
  display: flex;
  align-items: center;
  justify-content: center;
}
.glitch-layer-base, .glitch-layer {
  position: absolute;
  top: 0; left: 0;
  width: 100%; height: 100%;
  pointer-events: none;
}
.glitch-layer {
  opacity: 0;
  transition: opacity 0.1s ease-in;
}
.group:hover .glitch-layer {
  opacity: 1;
}

@keyframes glitch-subtle-animation {
  0% { transform: translate(0); }
  25% { transform: translate(-2px, 2px); }
  50% { transform: translate(2px, -2px); }
  75% { transform: translate(-1px, 1px); }
  100% { transform: translate(0); }
}

@keyframes glitch-scanline {
    0% { clip-path: inset(0% 0 95% 0); }
    25% { clip-path: inset(20% 0 75% 0); }
    50% { clip-path: inset(50% 0 40% 0); }
    75% { clip-path: inset(80% 0 10% 0); }
    100% { clip-path: inset(95% 0 0% 0); }
}

.group:hover .glitch-layer:nth-child(2) {
  mix-blend-mode: multiply;
  filter: brightness(0.8) contrast(1.5);
  animation: glitch-subtle-animation 0.7s linear both infinite;
}

.group:hover .glitch-layer:nth-child(3) {
  mix-blend-mode: color-dodge;
  filter: brightness(5) grayscale(1) contrast(3) sepia(0.5);
  animation: glitch-scanline 1.2s linear both infinite;
}

.group:hover .glitch-layer-base {
    filter: brightness(0.95);
    transition: filter 0.2s ease-in-out;
}
.group .glitch-layer-base {
    transition: filter 0.3s ease-in-out;
}

/* === ИЗМЕНЕНИЯ ЗДЕСЬ === */

/* Свечение и эффекты для частиц */
.glitch-layer-base circle {
    /* Добавляем transition для плавного изменения filter и transform */
    transition: filter 0.3s ease-out, transform 0.3s ease-out;
    /* Устанавливаем transform-origin в центр, чтобы масштабирование было корректным */
    transform-origin: center center;
}

/* При наведении на группу... */
.group:hover .glitch-layer-base circle {
    /* ...немного увеличиваем частицы */
    transform: scale(1.2);
}

.group:hover .glitch-layer-base circle[fill="#10b981"] {
  /* Добавляем blur(1px) к существующему свечению */
  filter: drop-shadow(0 0 8px #10b981) blur(1px);
}
.group:hover .glitch-layer-base circle[fill="#4a90e2"] {
  /* Добавляем blur(1px) к существующему свечению */
  filter: drop-shadow(0 0 8px #4a90e2) blur(1px);
}
.group:hover .glitch-layer-base circle[fill="#15256d"] {
  /* Добавляем blur(0.5px) для самых маленьких частиц */
  filter: drop-shadow(0 0 6px #4a90e2) blur(0.5px);
}

/* Стили для кибер-анимационного свитка */

.diploma-container {
  padding: 1rem; /* Для hover */
}

.diploma-svg {
  transition: transform 0.4s cubic-bezier(0.25, 0.8, 0.25, 1);
  filter: none; /* Начальное состояние без glitch */
}

/* Анимация "активации" (подъем + ротация + glitch) */
.diploma-container:hover .diploma-svg {
  transform: translateY(-15px) scale(1.05) rotate(2deg);
  animation: glitch 0.3s infinite alternate; /* Glitch эффект */
}

/* Glitch анимация */
@keyframes glitch {
  0% { transform: translate(0); }
  20% { transform: translate(-2px, 2px); }
  40% { transform: translate(2px, -2px); }
  60% { transform: translate(-1px, 1px); }
  80% { transform: translate(1px, -1px); }
  100% { transform: translate(0); }
}

/* Анимация разворачивания роллов с мерцанием */
.diploma-svg .top-roll,
.diploma-svg .bottom-roll {
  transform-origin: center;
  transition: transform 0.6s ease-in-out, opacity 0.3s;
  transition-delay: 0.2s;
}

.diploma-container:hover .top-roll {
  transform: translateY(-5px) scale(1.1);
  animation: neonFlicker 0.5s infinite alternate;
}

.diploma-container:hover .bottom-roll {
  transform: translateY(5px) scale(1.1);
  animation: neonFlicker 0.5s infinite alternate;
}

/* Мерцание неона */
@keyframes neonFlicker {
  0% { opacity: 1; }
  100% { opacity: 0.8; }
}

/* Анимация сканирования линий данных */
.diploma-svg .data-lines line {
  stroke-dasharray: 120;
  stroke-dashoffset: 120;
  transition: stroke-dashoffset 1s linear;
  transition-delay: 0.4s;
}

.diploma-container:hover .data-lines line {
  stroke-dashoffset: 0;
}

/* Начальное состояние печати */
.diploma-svg .seal {
  transform-origin: center;
  transform: scale(0);
  transition: transform 0.5s cubic-bezier(0.34, 1.56, 0.64, 1), fill 0.5s ease;
  transition-delay: 0.1s;
}

/* Появление печати */
.diploma-container:hover .seal {
  transform: scale(1);
}

/* Начальное состояние галочки с glitch */
.diploma-svg .checkmark {
  stroke-dasharray: 35;
  stroke-dashoffset: 35;
  transition: stroke-dashoffset 0.4s ease-in-out;
  transition-delay: 0.3s;
  animation: none;
}

.diploma-container:hover .checkmark {
  stroke-dashoffset: 0;
  animation: glitch 0.3s infinite alternate; /* Glitch на галочке */
}